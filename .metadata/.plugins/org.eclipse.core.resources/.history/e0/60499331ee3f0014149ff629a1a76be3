package twgitter.config;

import java.io.FileInputStream;
import java.io.IOException;
import java.text.ParseException;
import java.util.Properties;

public class LoadProperties {
	public static AllTokens loadTokenConfig() throws ParseException
	{
		String basepath = System.getProperty("java.io.tmpdir");
		String filename = basepath + "\\twgitter\\config\\tokens.cfg";  // プロパティファイルのファイル名

		Properties cfg = new Properties();

		try {
			cfg.load(new FileInputStream(filename));
		} catch (IOException e) {
			System.err.println("Cannot open " + filename + ".");
			e.printStackTrace();
			System.exit(-1);  // プログラム終了
		}

		// 読み込み
		AllTokens tokens = new AllTokens();

		tokens.setAppNetToken(cfg.getProperty("AppNet.token"));
		tokens.setCroudiaConsumerKey(cfg.getProperty("Croudia.ConsumerKey"));
		tokens.setCroudiaConsumerSecret(cfg.getProperty("Croudia.ConsumerSecret"));
		tokens.setCroudiaToken(cfg.getProperty("Croudia.token"));
		tokens.setCroudiaAccess_token(cfg.getProperty("Croudia.access_token"));
		tokens.setCroudiaToken_type(cfg.getProperty("Croudia.token_type"));
		if(cfg.getProperty("Croudia.expires_in").equals(""))
		{
			tokens.setCroudiaExpires_in(0);
		}else{
			tokens.setCroudiaExpires_in(Integer.parseInt(cfg.getProperty("Croudia.expires_in")));
		}
		tokens.setCroudiaRefresh_token(cfg.getProperty("Croudia.refresh_token"));
		tokens.setCroudiaGetDateStr(cfg.getProperty("Croudia.getDate"));
		tokens.setGitterToken(cfg.getProperty("Gitter.token"));
		tokens.setSlackClientID(cfg.getProperty("Slack.clientID"));
		tokens.setSlackClientSecret(cfg.getProperty("Slack.clientSecret"));
		tokens.setSlackToken(cfg.getProperty("Slack.token"));
		tokens.setTwitterConsumerKey(cfg.getProperty("Twitter.ConsumerKey"));
		tokens.setTwitterConsumerSecret(cfg.getProperty("Twitter.ConsumerSecret"));
		tokens.setTwitterAccessToken(cfg.getProperty("Twitter.AccessToken"));
		tokens.setTwitterAccessTokenSecret(cfg.getProperty("Twitter.AccessTokenSecret"));

		return tokens;
	}
}
