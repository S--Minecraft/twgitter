package twgitter.gitter;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.lang.reflect.Type;
import java.net.URI;
import java.net.URLConnection;
import java.util.Collection;
import java.util.List;
import java.util.Map;

import twgitter.gitter.config.Config;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

public class Streaming {
	public static void main(String[] args) throws Exception {
		// 引数からURIを生成
		String streamRoomId = GetRooms.roomNameToId("S--Minecraft/twgitter");
		String URI = "https://stream.gitter.im/v1/rooms/" + streamRoomId + "/chatMessages";
		String[][] Header = { {"Authorization", "Bearer " + Config.token}, {"Accept", "application/json"} };
		String CharCode = "UTF-8";
		Gson gson = new Gson();

		URI uri = new URI(URI);

		// URI -> URL -> URLConnection の順で接続インスタンスを取得
		URLConnection connection = uri.toURL().openConnection();

		//ヘッダ設定
		if(!(Header[0][0].equals("") && Header[0][1].equals("")))
		{
			for(int i=0;i<Header.length;i++)
			{
				connection.setRequestProperty(Header[i][0] ,Header[i][1]);
			}
		}

		// ヘッダ情報を出力
		Map<String, List<String>> headers = connection.getHeaderFields();
		for (Object key : headers.keySet()) {
			System.out.println("[Misc]HTTP Headers{" + key + ": " + headers.get(key) + "}");
		}

		// コンテンツを出力
		BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream(), CharCode));
		String buffer = reader.readLine();
		System.out.println("[Misc]Successed to get HTTP");

		while(null != buffer)
		{
			System.out.println("G:" + buffer);
			if(buffer!=" ")
			{
				Type collectionType = new TypeToken<Collection<ChatString>>(){}.getType();
				List<ChatString> string = gson.fromJson(buffer,collectionType);

				//ChatFromUser user = string.getFromUser();
				//System.out.println("[Gitter][" + user.getDisplayName() + "(" + user.getUsername()  + ")]" + string.getText());
			}
			buffer = reader.readLine();
		}
	}

}
