package twgitter.appNet;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URI;
import java.net.URLConnection;
import java.util.List;
import java.util.Map;

import twgitter.gitter.ChatFromUser;
import twgitter.gitter.ChatString;
import twgitter.appNet.config.Config;

import com.google.gson.Gson;

public class Streaming {
	//curl -k -H "Authorization: Bearer AQAAAAAAC9R-kjm8uCBwXwDJxXV3_hh5VMzzlFu0bV1vk99FgQVaUq7rPswGRsAeB80yHCAeoeFWmx4oYMWOgmBwbaiH499NEw" -H "X-ADN-Pretty-JSON: 1" "https://api.app.net/posts/stream"
	public static void main(String[] args) throws Exception {
		// 引数からURIを生成
		String URI = "https://api.app.net/posts/stream";
		String[][] Header = { {"Authorization", "Bearer " + Config.token}, {"X-ADN-Pretty-JSON", "1"} };
		String CharCode = "UTF-8";
		Gson gson = new Gson();

		URI uri = new URI(URI);

		// URI -> URL -> URLConnection の順で接続インスタンスを取得
		URLConnection connection = uri.toURL().openConnection();

		//ヘッダ設定
		if(!(Header[0][0].equals("") && Header[0][1].equals("")))
		{
			for(int i=0;i<Header.length;i++)
			{
				connection.setRequestProperty(Header[i][0] ,Header[i][1]);
			}
		}

		// ヘッダ情報を出力
		Map<String, List<String>> headers = connection.getHeaderFields();
		for (Object key : headers.keySet()) {
			System.out.println("[Misc]HTTP Headers{" + key + ": " + headers.get(key) + "}");
		}

		// コンテンツを出力
		BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream(), CharCode));
		String buffer = reader.readLine();
		System.out.println("[Misc]Successed to get HTTP");

		while(null != buffer)
		{
			System.out.println("G:" + buffer);
			char[] bufferChar = buffer.toCharArray();
			/*
			if(bufferChar[0] == '[')
			{
				Type collectionType = new TypeToken<Collection<ChatString>>(){}.getType();
				List<ChatString> string = gson.fromJson(buffer,collectionType);
				for(int i=0;i<string.size();i++)
				{
					ChatFromUser user = string.get(i).getFromUser();
					System.out.println("[Gitter][" + user.getDisplayName() + "(" + user.getUsername()  + ")]" + string.get(i).getText());
				}
			}else if(bufferChar[0] == '{'){
				ChatString chat = gson.fromJson(buffer.toString(),ChatString.class);
				ChatFromUser user = chat.getFromUser();
				/*if(chat.getText().matches("\\[!\\[.*\\.((png)|(jpg)|(gif)|(jpeg))\\](http\\.*.((png)|(jpg)|(gif)|(jpeg)))\\]"))
				{
					System.out.print("[Gitter]mached");
					String chatText = chat.getText();
					int beforeFileName = chatText.indexOf("\\[!\\[")+1;
					int afterFileName = chatText.indexOf("((png)|(jpg)|(gif)|(jpeg))\\]");
					String FileName = chatText.substring(beforeFileName,afterFileName);

					int beforeUrl = chatText.indexOf("\\(http")+1;
					int afterUrl = chatText.indexOf("\\)\\]\\(");
					String Url = chatText.substring(beforeUrl,afterUrl);

					String Out = "[Gitter][" + user.getDisplayName() + "(" + user.getUsername() + ")]" + "#Image [" + FileName + "(" + Url + ")]";

					System.out.println(Out);
				}else{
					System.out.println("[Gitter][" + user.getDisplayName() + "(" + user.getUsername()  + ")]" + chat.getText());
				}
			}else if(bufferChar[0] == ' '){
				System.out.println("[Gitter]No new chats now.");
			}else{
				System.out.println("[Gitter]Undefind buffer case...");
			}*/
		buffer = reader.readLine();
		}
	}
}
